{"version":3,"sources":["components/QR/QRreader.module.css","redux/redux-store.js","components/QR/QRreader.jsx","container/ScanContainer.js","components/Login/Login.jsx","container/LoginContainer.js","components/Result /Result.jsx","container/ResultContainer.js","App.js","index.js","components/Login/Login.module.css"],"names":["module","exports","reducers","combineReducers","form","formReducer","store","createStore","QRreader","handleScan","handleError","className","stl","delay","onError","onScan","style","width","margin","ScanContainer","props","useState","keyScan","setKeyScan","key","localStorage","getItem","to","data","setItem","btoa","err","console","error","renderTextField","label","input","meta","touched","invalid","custom","TextField","placeholder","helperText","reduxForm","handleSubmit","Grid","container","direction","justify","loginCard","Field","name","component","type","btn","Button","variant","color","onClick","LoginContainer","login","setLogin","Login","onSubmit","values","password","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","Result","keyInfo","scanKey","logout","Table","TableHead","TableRow","map","info","href","marginTop","ResultContainer","isLogout","setIsLogout","atob","split","clear","compose","withRouter","Container","maxWidth","from","path","render","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.42e090a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"QRreader\":\"QRreader_QRreader__2o0nq\"};","import { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nlet reducers = combineReducers({\n  form: formReducer,\n});\nexport const store = createStore(reducers);\n","import React from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nimport stl from './QRreader.module.css'\n\nexport const QRreader = ({ handleScan, handleError }) => {\n  return (\n    <div className= {stl.QRreader}>\n      <QrReader\n        delay={100}\n        onError={handleError}\n        onScan={handleScan}\n        style={{ width: \"40%\", margin: \"5% auto\" }}\n      />\n      <h3>Please scan your QR code</h3>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { QRreader } from \"../components/QR/QRreader\";\n\nexport const ScanContainer = (props) => {\n  const [keyScan, setKeyScan] = useState(\"\");\n\n  let key = localStorage.getItem(\"jwt\");\n\n  const handleScan = (data) => {\n    if (data) {\n      localStorage.setItem(\"jwtScan\", btoa(data));\n      let keyScan = localStorage.getItem(\"jwtScan\");\n      setKeyScan({ keyScan });\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  if (keyScan && key) {\n    return <Redirect to={`/result?r=${keyScan.keyScan}`} />;\n  } else {\n    return (\n      <>\n        {!key ? (\n          <Redirect to={`/login`} />\n        ) : (\n          <QRreader handleScan={handleScan} handleError={handleError} />\n        )}\n      </>\n    );\n  }\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport { Field, reduxForm } from \"redux-form\";\nimport stl from \"./Login.module.css\";\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst LoginForm = ({ handleSubmit }) => {\n  return (\n    <Grid container direction=\"row\" justify=\"center\">\n      <div className={stl.loginCard}>\n        <form>\n          <Field name=\"login\" label=\"Login\" component={renderTextField} />\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={renderTextField}\n            type=\"password\"\n          />\n        </form>\n        <div className={stl.btn}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n            Sign in\n          </Button>\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default reduxForm({\n  form: \"loginForm\",\n})(LoginForm);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport LoginForm from \"../components/Login/Login\";\n\nexport const LoginContainer = (props) => {\n  const [login, setLogin] = useState(false);\n\n  const onSubmitInfo = (values) => {\n    const { login, password } = values;\n    if (login && password) {\n      localStorage.setItem(\"jwt\", btoa(`${login}\":\"${password}`));\n      values.login = \"\";\n      values.password = \"\";\n      setLogin(true);\n    }\n  };\n  return (\n    <>\n      {login ? (\n        <Redirect to={\"/scan\"} />\n      ) : (\n        <div>\n          <h3>Login</h3>\n          <LoginForm onSubmit={onSubmitInfo} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nexport const Result = ({ keyInfo, scanKey, logout }) => {\n  return (\n    <>\n      <Table style={{ width: \"80%\", margin: \"auto\" }}>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Password</StyledTableCell>\n            <StyledTableCell>Email</StyledTableCell>\n            <StyledTableCell>QR code </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableRow>\n          {keyInfo.map((info) => (\n            <TableCell key={info}>{info}</TableCell>\n          ))}\n          <TableCell>\n            <a href={scanKey}>\n              <h3>{scanKey}</h3>\n            </a>\n          </TableCell>\n        </TableRow>\n      </Table>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={logout}\n        style={{ marginTop: \"30px\" }}\n      >\n        Logout in\n      </Button>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport { Result } from \"../components/Result /Result\";\n\nexport const ResultContainer = (props) => {\n  const [isLogout, setIsLogout] = useState(false);\n\n  let keyInfo = atob(localStorage.getItem(\"jwt\")).split('\":\"');\n  let scanKey = atob(localStorage.getItem(\"jwtScan\"));\n\n  const handleClickLogout = () => {\n    setIsLogout(true);\n    localStorage.clear();\n  };\n\n  return (\n    <>\n      {isLogout ? (\n        <Redirect to={\"/login\"} />\n      ) : (\n        <div>\n          <Result\n            keyInfo={keyInfo}\n            scanKey={scanKey}\n            logout={handleClickLogout}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route, withRouter } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport { compose } from \"redux\";\n\nimport \"./App.css\";\nimport { ScanContainer } from \"./container/ScanContainer\";\nimport { LoginContainer } from \"./container/LoginContainer\";\nimport { ResultContainer } from \"./container/ResultContainer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        <Redirect from=\"/\" to=\"/scan\" />\n        <Route path=\"/scan\" render={() => <ScanContainer />} />\n        <Route path=\"/login\" render={() => <LoginContainer />} />\n        <Route path=\"/result\" render={() => <ResultContainer />} />\n      </Container>\n    </div>\n  );\n};\n\nexport default compose(withRouter)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { store } from \"./redux/redux-store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginCard\":\"Login_loginCard__3Al-t\",\"btn\":\"Login_btn__172Gj\"};"],"sourceRoot":""}